{
  "skill.json": {
    "manifest": {
      "publishingInformation": {
        "locales": {
          "en-US": {
            "summary": "Check your system battery level",
            "examplePhrases": [
              "Alexa, ask Battery Status what's my battery level",
              "Alexa, ask Battery Status for battery percentage",
              "Alexa, open Battery Status"
            ],
            "keywords": [
              "battery",
              "status",
              "level",
              "percentage",
              "system"
            ],
            "name": "Battery Status",
            "description": "Get your system battery level from your monitoring system. Simply ask about your battery level and get instant status updates."
          }
        },
        "isAvailableWorldwide": false,
        "testingInstructions": "Say 'Alexa, ask Battery Status what's my battery level' to test the skill.",
        "category": "UTILITIES",
        "distributionCountries": [
          "US"
        ]
      },
      "apis": {
        "custom": {
          "endpoint": {
            "uri": "arn:aws:lambda:us-east-1:123456789012:function:ask-battery-status-default"
          },
          "interfaces": [],
          "regions": {
            "EU": {
              "endpoint": {
                "uri": "arn:aws:lambda:eu-west-1:123456789012:function:ask-battery-status-EU"
              }
            },
            "NA": {
              "endpoint": {
                "uri": "arn:aws:lambda:us-east-1:123456789012:function:ask-battery-status-default"
              }
            },
            "FE": {
              "endpoint": {
                "uri": "arn:aws:lambda:us-west-2:123456789012:function:ask-battery-status-FE"
              }
            }
          }
        }
      },
      "manifestVersion": "1.0",
      "privacyAndCompliance": {
        "allowsPurchases": false,
        "locales": {
          "en-US": {
            "termsOfUseUrl": "",
            "privacyPolicyUrl": ""
          }
        },
        "containsAds": false,
        "isExportCompliant": true,
        "isChildDirected": false,
        "usesPersonalInfo": false
      }
    }
  },
  "models/en-US.json": {
    "interactionModel": {
      "languageModel": {
        "invocationName": "battery status",
        "intents": [
          {
            "name": "AMAZON.FallbackIntent",
            "samples": []
          },
          {
            "name": "AMAZON.CancelIntent",
            "samples": []
          },
          {
            "name": "AMAZON.HelpIntent",
            "samples": []
          },
          {
            "name": "AMAZON.StopIntent",
            "samples": []
          },
          {
            "name": "GetBatteryIntent",
            "slots": [],
            "samples": [
              "what's my battery level",
              "check my battery",
              "battery percentage",
              "how much battery do I have",
              "what's the battery status",
              "check battery level",
              "battery level",
              "what is my battery at",
              "battery info",
              "show me battery",
              "get battery status",
              "battery check"
            ]
          },
          {
            "name": "AMAZON.NavigateHomeIntent",
            "samples": []
          }
        ],
        "types": []
      }
    }
  },
  "lambda/index.js": "const Alexa = require('ask-sdk-core');\nconst https = require('https');\n\nconst LaunchRequestHandler = {\n    canHandle(handlerInput) {\n        return Alexa.getRequestType(handlerInput.requestEnvelope) === 'LaunchRequest';\n    },\n    handle(handlerInput) {\n        const speakOutput = 'Welcome to Battery Status! You can ask me about your battery level.';\n        \n        return handlerInput.responseBuilder\n            .speak(speakOutput)\n            .reprompt('Ask me what\\'s your battery level.')\n            .getResponse();\n    }\n};\n\nconst GetBatteryIntentHandler = {\n    canHandle(handlerInput) {\n        return Alexa.getRequestType(handlerInput.requestEnvelope) === 'IntentRequest'\n            && Alexa.getIntentName(handlerInput.requestEnvelope) === 'GetBatteryIntent';\n    },\n    async handle(handlerInput) {\n        try {\n            const batteryData = await callWebhook();\n            const speakOutput = batteryData.response.outputSpeech.text;\n            \n            return handlerInput.responseBuilder\n                .speak(speakOutput)\n                .getResponse();\n        } catch (error) {\n            console.error('Error calling webhook:', error);\n            const speakOutput = 'Sorry, I couldn\\'t get your battery status right now. Please try again later.';\n            \n            return handlerInput.responseBuilder\n                .speak(speakOutput)\n                .getResponse();\n        }\n    }\n};\n\nconst HelpIntentHandler = {\n    canHandle(handlerInput) {\n        return Alexa.getRequestType(handlerInput.requestEnvelope) === 'IntentRequest'\n            && Alexa.getIntentName(handlerInput.requestEnvelope) === 'AMAZON.HelpIntent';\n    },\n    handle(handlerInput) {\n        const speakOutput = 'You can ask me about your battery level by saying \"what\\'s my battery level\" or \"check my battery\".';\n\n        return handlerInput.responseBuilder\n            .speak(speakOutput)\n            .reprompt(speakOutput)\n            .getResponse();\n    }\n};\n\nconst CancelAndStopIntentHandler = {\n    canHandle(handlerInput) {\n        return Alexa.getRequestType(handlerInput.requestEnvelope) === 'IntentRequest'\n            && (Alexa.getIntentName(handlerInput.requestEnvelope) === 'AMAZON.CancelIntent'\n                || Alexa.getIntentName(handlerInput.requestEnvelope) === 'AMAZON.StopIntent');\n    },\n    handle(handlerInput) {\n        const speakOutput = 'Goodbye!';\n\n        return handlerInput.responseBuilder\n            .speak(speakOutput)\n            .getResponse();\n    }\n};\n\nconst FallbackIntentHandler = {\n    canHandle(handlerInput) {\n        return Alexa.getRequestType(handlerInput.requestEnvelope) === 'IntentRequest'\n            && Alexa.getIntentName(handlerInput.requestEnvelope) === 'AMAZON.FallbackIntent';\n    },\n    handle(handlerInput) {\n        const speakOutput = 'Sorry, I don\\'t know about that. You can ask me about your battery level.';\n\n        return handlerInput.responseBuilder\n            .speak(speakOutput)\n            .reprompt('You can ask me what\\'s your battery level.')\n            .getResponse();\n    }\n};\n\nconst SessionEndedRequestHandler = {\n    canHandle(handlerInput) {\n        return Alexa.getRequestType(handlerInput.requestEnvelope) === 'SessionEndedRequest';\n    },\n    handle(handlerInput) {\n        console.log(`~~~~ Session ended: ${JSON.stringify(handlerInput.requestEnvelope)}`);\n        return handlerInput.responseBuilder.getResponse();\n    }\n};\n\nconst IntentReflectorHandler = {\n    canHandle(handlerInput) {\n        return Alexa.getRequestType(handlerInput.requestEnvelope) === 'IntentRequest';\n    },\n    handle(handlerInput) {\n        const intentName = Alexa.getIntentName(handlerInput.requestEnvelope);\n        const speakOutput = `You just triggered ${intentName}`;\n\n        return handlerInput.responseBuilder\n            .speak(speakOutput)\n            .getResponse();\n    }\n};\n\nconst ErrorHandler = {\n    canHandle() {\n        return true;\n    },\n    handle(handlerInput, error) {\n        const speakOutput = 'Sorry, I had trouble doing what you asked. Please try again.';\n        console.log(`~~~~ Error handled: ${JSON.stringify(error)}`);\n\n        return handlerInput.responseBuilder\n            .speak(speakOutput)\n            .reprompt(speakOutput)\n            .getResponse();\n    }\n};\n\n// Helper function to call the webhook\nfunction callWebhook() {\n    return new Promise((resolve, reject) => {\n        const url = 'https://accepted-marten-relieved.ngrok-free.app/webhook/alexa/battery';\n        \n        https.get(url, (res) => {\n            let data = '';\n            \n            res.on('data', (chunk) => {\n                data += chunk;\n            });\n            \n            res.on('end', () => {\n                try {\n                    const jsonData = JSON.parse(data);\n                    resolve(jsonData);\n                } catch (error) {\n                    reject(error);\n                }\n            });\n            \n        }).on('error', (error) => {\n            reject(error);\n        });\n    });\n}\n\nexports.handler = Alexa.SkillBuilders.custom()\n    .addRequestHandlers(\n        LaunchRequestHandler,\n        GetBatteryIntentHandler,\n        HelpIntentHandler,\n        CancelAndStopIntentHandler,\n        FallbackIntentHandler,\n        SessionEndedRequestHandler,\n        IntentReflectorHandler)\n    .addErrorHandlers(\n        ErrorHandler)\n    .withCustomUserAgent('battery-status/v1.0')\n    .lambda();",
  "lambda/package.json": {\n    \"name\": \"battery-status-skill\",\n    \"version\": \"1.0.0\",\n    \"description\": \"Alexa skill to check system battery status\",\n    \"main\": \"index.js\",\n    \"scripts\": {\n      \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n    },\n    \"dependencies\": {\n      \"ask-sdk-core\": \"^2.7.0\",\n      \"ask-sdk-model\": \"^1.19.0\"\n    },\n    \"author\": \"Battery Status Skill\",\n    \"license\": \"Apache-2.0\",\n    \"engines\": {\n      \"node\": \"18.*\"\n    }\n  },\n  \"lambda/util.js\": \"// Add any utility functions here if needed\\nmodule.exports = {\\n    // Utility functions can go here\\n};\",\n  \"README.md\": \"# Battery Status Alexa Skill\\n\\n## Description\\nThis Alexa skill allows users to check their system battery level by calling a webhook endpoint.\\n\\n## Usage\\nUsers can say:\\n- \\\"Alexa, ask Battery Status what's my battery level\\\"\\n- \\\"Alexa, ask Battery Status for battery percentage\\\"\\n- \\\"Alexa, open Battery Status\\\"\\n\\n## Setup\\n1. Import this skill package into the Alexa Developer Console\\n2. Choose Alexa-hosted (Node.js) when prompted\\n3. Build and test the skill\\n4. Deploy when ready\\n\\n## Webhook Endpoint\\nThe skill calls: `https://accepted-marten-relieved.ngrok-free.app/webhook/alexa/battery`\\n\\n## Response Format\\nExpected webhook response:\\n```json\\n{\\n  \\\"version\\\": \\\"1.0\\\",\\n  \\\"response\\\": {\\n    \\\"outputSpeech\\\": {\\n      \\\"type\\\": \\\"PlainText\\\",\\n      \\\"text\\\": \\\"Your system battery in Beirut is at 58 percent.\\\"\\n    },\\n    \\\"shouldEndSession\\\": true\\n  }\\n}\\n```\"\n}